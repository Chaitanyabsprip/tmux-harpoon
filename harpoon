#!/bin/sh
cachefile="$XDG_CACHE_HOME/.tmux-harpoon-sessions"

help() {
    echo
    echo "Usage:"
    echo "    ${0##*/} [options] [args]"
    echo "Options:"
    echo "    -a                    Track current tmux session"
    echo "    -r [session_name]     Stop tracking session with session name. If"
    echo "                          session_name is not passed then remove"
    echo "                          current session"
    echo "    -l                    List tracked sessions"
    echo "    -s [index]            Switch to the session at the specified index in the list of tracked sessions"
    echo "    -h                    Display this help message"
}

remove() {
    session_name="$1"
    sed -i "/^$session_name/d" "$cachefile"
}

view() {
    entry="$(awk -v home="$HOME" -v bold="$(tput setaf 4)" -v sgr0="$(tput sgr0)" '{
        split($0, parts, "=")
        key = parts[1]
        value = parts[2]
        sub(home "/", "", value)
        printf "%s%s%s %s\n", bold, key, sgr0, value
    }' "$cachefile" | align ' ' | fzf-tmux -p '50%,50%' --ansi)"
    name="$(echo "$entry" | cut -d ' ' -f 1)"
    path="$HOME/$(echo "$entry" | rev | cut -d ' ' -f 1 | rev)"
    { [ -z "$name" ] || [ -z "$path" ]; } && exit 0
    _switch "$name" "$path"
}

add() {
    tmux display -p '#{session_name}=#{session_path}' >>"$cachefile"
    awk -i inplace '!seen[$0]++' "$cachefile" # de-duplicate
    exec tmux display 'Tracking session #{session_name}'
}

_switch() {
    name="$1"
    path="$2"
    if ! sessions_has_match "$name=$path"; then
        tmux new -ds "$name" -c "$path"
    fi
    exec tmux switch-client -t "$name"
}

switch() {
    index="$1"
    count=1
    while IFS='=' read -r name path; do
        if [ "$count" = "$index" ]; then
            _switch "$name" "$path"
        fi
        count=$((count + 1))
    done <"$cachefile"
}

edit_file() {
    exec tmux popup -E "$EDITOR $cachefile"
}

sessions_has_match() {
    list_sessions | grep -wq "^$1"
}

list_sessions() {
    tmux ls -F '#{session_name}=#{session_path}'
}

bold() {
    printf "\033[1m%s\033[0m\n" "$*"
}

main() {
    while getopts ":har:ls:e" opt; do
        case "$opt" in
        h | :) help && exit 0 ;;
        a) add ;;
        r) remove "$OPTARG" ;;
        l) view ;;
        s) switch "$OPTARG" ;;
        e) edit_file ;;
        \?) help && exit 1 ;;
        esac
    done
}

main "$@"
